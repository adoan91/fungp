{"body":"About this program\r\n------------------\r\n\r\n**fungp** is a genetic programming library implemented in the Clojure programming language. It's pronounced \r\nfun-gee-pee, for *functional genetic programming*. \r\n\r\nHow do I use it?\r\n-----------------\r\n\r\nSee sample.clj for an example usage. The general idea is to pass in a fitness function, a terminal set,\r\na function set, and other various options, and the algorithm will attempt to evolve code out of \r\nthe functions and terminals.\r\n\r\nThe **run-genetic-programming** function accepts the following options keywords:\r\n\r\n * iterations : number of iterations *between migrations*\r\n * migrations : number of migrations\r\n * num-islands : number of islands\r\n * population-size : size of the populations\r\n * tournament-size : size of the tournaments\r\n * mutation-probability : probability of mutation\r\n * mutation-depth : depth of mutated trees\r\n * max-depth : maximum depth of trees\r\n * terminals : terminals used in tree building\r\n * numbers : number literals to be used in tree building\r\n * functions : functions used in tree building, in the form [function arity]\r\n * fitness : a fitness function that takes a tree and returns an error number, lower is better\r\n * report : a reporting function passed [best-tree best-fit] at each migration\r\n\r\nWhat does it do?\r\n----------------\r\n\r\nHere's a sample output from the test function in sample.clj:\r\n\r\n```\r\nfungp :: Functional Genetic Programming in Clojure\r\nMike Vollmer, 2012\r\nTest inputs: (-10 -8 -6 -4 -2 0 2 4 6 8)\r\nTest outputs: (300.0 192.0 108.0 48.0 12.0 0.0 12.0 48.0 108.0 192.0)\r\n\r\n(fn\r\n [a]\r\n (let\r\n  []\r\n  (-\r\n   (+\r\n    (- (inc (inc 9.0)) (fungp.util/sdiv (dec a) (* a 0.0)))\r\n    (+ (- (fungp.util/abs a) (- a a)) (inc (* a a))))\r\n   (dec (* (- (dec a) (inc a)) (+ (+ a 7.0) (* a a)))))))\r\n\r\nError:\t10210.0\r\n\r\n(fn\r\n [a]\r\n (let\r\n  []\r\n  (+\r\n   (- (inc (inc 9.0)) (fungp.util/sdiv (dec a) (* a 0.0)))\r\n   (+\r\n    (+\r\n     (inc (fungp.util/abs a))\r\n     (+\r\n      (+\r\n       (- (inc (inc 9.0)) (fungp.util/sdiv (dec a) (* a 0.0)))\r\n       (+ (- (fungp.util/abs a) (- a a)) (inc (* a a))))\r\n      (fungp.util/abs\r\n       (fungp.util/sdiv (fungp.util/abs 8.0) (dec 3.0)))))\r\n    (inc (* a a))))))\r\n\r\nError:\t6778.0\r\n\r\n(fn\r\n [a]\r\n (let\r\n  []\r\n  (+\r\n   (* a a)\r\n   (+ (+ (- (fungp.util/abs a) (- a a)) (inc (* a a))) (inc (* a a))))))\r\n\r\nError:\t580.0\r\n\r\n(fn [a] (let [] (+ (* a a) (+ (* a a) (inc (* a a))))))\r\n\r\nError:\t10.0\r\n\r\nDone!\r\n(fn [a] (let [] (+ (* a a) (+ (* a a) (* a a)))))\r\n\r\nError:\t0.0\r\n```\r\n\r\nLicense\r\n-------\r\n\r\nProject created by Mike Vollmer and released under GPL. See the LICENCE file distributed with this code. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"fungp","tagline":"A genetic programming library for Clojure"}